name: CI-CD

on:
  push:
    branches:
      - main

env:
  S3_BUCKET_NAME: myserverbucket751
#  RESOURCE_PATH: ./src/main/resources/application.properties
  CODE_DEPLOY_APPLICATION_NAME: myserverbucket751-code-deploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: 751server

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
        
        # [1]
#      - name: Set yaml file
#        env:
#          OCCUPY_SECRET: ${{ secrets.APPLICATION_PROPERTIES }}
##          OCCUPY_SECRET2: ${{ secrets.APPLICATION_NAVERMAIL_YML }}
#          OCCUPY_SECRET_DIR: src/main/resources
#          OCCUPY_SECRET_DIR_FILE_NAME1: application.properties
##          OCCUPY_SECRET_DIR_FILE_NAME2: application-navermail.yml
#          run: echo $OCCUPY_SECRET | base64 --decode > $APPLICATION_PROPERTIES/$OCCUPY_SECRET_DIR_FILE_NAME1
##            && echo $OCCUPY_SECRET2 | base64 --decode > $APPLICATION_NAVERMAIL_YML/$OCCUPY_SECRET_DIR_FILE_NAME2
##        uses: microsoft/variable-substitution@v1
##        with:
##          files: ${{ env.RESOURCE_PATH }}
##        env:
##          # secrets 밑으로 주입할 시
##          #override.value: ${{ secrets.DI_FROM_SECRET }}
##          #밑에처럼 사용해도 주입이 된다.
##          override.value: 'from deploy.yml'
          

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Set YML
        run: |
          src/main/resources/application.properties
          find src
        # [2]
      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

        # [3]
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

        # [4]
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: ${{ secrets.AWS_REGION }} 

        # [5]
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

        # [6]
      - name: Code Deploy
        run: | 
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
